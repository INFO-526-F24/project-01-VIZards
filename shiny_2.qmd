---
title: "Tucson Crime Trend Analysis"
author: 
  - name: "VIZards"
    affiliations:
      - name: "College of Information, University of Arizona"
description: "Tucson Police Reported Crime Data Analysis"
format: dashboard
editor: visual
execute:
  warning: false
  echo: false
---

```{r include=FALSE}
if (!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, shiny, scales, ggplot2, shinythemes, plotly)

```

```{r include=FALSE}
crime_data <- read.csv("./data/Tucson_Police_Reported_Crimes.csv")

crime_data <- crime_data %>%
  mutate(
    ProcessedCrimeType = str_replace(UCRDescription, "^[0-9]+ - ", "") %>% str_to_title(),
    Year = as.numeric(Year),
    Hour = as.numeric(substr(TimeOccur, 1, 2)),
    TimeOfDay = case_when(
      Hour >= 0 & Hour < 4  ~ "Night",
      Hour >= 4 & Hour < 6  ~ "Dawn",
      Hour >= 6 & Hour < 12 ~ "Morning",
      Hour >= 12 & Hour < 16 ~ "Afternoon",
      Hour >= 16 & Hour < 19 ~ "Evening",
      Hour >= 19 & Hour <= 23 ~ "Dusk",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(ProcessedCrimeType) & !is.na(Hour) & !is.na(TimeOfDay))

unique_crime_types <- c("All", sort(unique(crime_data$ProcessedCrimeType)))

time_of_day_colors <- c(
  "Night" = "#1c2833",
  "Dawn" = "#5dade2",
  "Morning" = "#f1c40f",
  "Afternoon" = "#e74c3c",
  "Evening" = "#f39c12",
  "Dusk" = "#34495e"
)

crime_colors <- c(
  "Homicide" = "#d78f7e",
  "Sexual Assault" = "#111210",
  "Robbery" = "#dce0c5",
  "Assault, Aggravated" = "#80607f",
  "Burglary" = "#ffa07a",
  "Larceny" = "#91c4b3",
  "GTA" = "#8b4513",
  "Other" = "gray"
)

crime_data
```

```{r echo=FALSE}
ui <- fluidPage(
  theme = shinytheme("cosmo"),
  
  titlePanel(
    tags$div(
      tags$div(
        style = "display: flex; align-items: center; justify-content: center;",
        tags$h1("Crime Analytics Dashboard", style = "color: #555; font-weight: bold; text-align: center; margin-bottom: 10px;")
      )
    )
  ),
  
  tags$style(HTML("
    body {
      background-color: #f4f6f9;
      font-family: 'Arial', sans-serif;
    }
    .sidebar {
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      padding: 15px;
    }
    .sidebar h4, .sidebar label {
      color: #333333;
      font-weight: bold;
    }
    .main-panel {
      background-color: #ffffff;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    footer {
      text-align: center;
      color: #888;
      font-size: 14px;
      margin-top: 20px;
      padding: 10px;
    }
    footer a {
      color: #007bff;
      text-decoration: none;
    }
    footer a:hover {
      text-decoration: underline;
    }
  ")),

  sidebarLayout(
    sidebarPanel(
      class = "sidebar",
      tags$h4("Filters", style = "color: #007bff; text-align: center; margin-bottom: 15px;"),
      selectInput(
        inputId = "crime_type",
        label = "Select Crime Type:",
        choices = unique_crime_types,
        selected = "All"
      ),
      checkboxGroupInput(
      inputId = "year_filter",
      label = "Select Years:",
      choices = sort(unique(crime_data$Year)),
      selected = sort(unique(crime_data$Year))
    )
    ),
    mainPanel(
      class = "main-panel",
      tabsetPanel(
        tabPanel(
          tags$h4("Crime Distribution by Hour", style = "color: #007bff"),
          plotlyOutput("bar_chart", height = "600px", width = "100%")
        )
      )
    )
  ),

  tags$footer(
    tags$a(
      href = "https://info-526-f24.github.io/project-01-VIZards/",
      "Visit Our Website - VIZards"
    ),
    style = "margin-top: 20px; background-color: #f4f6f9; padding: 10px;"
  )
)
```

```{r echo=FALSE}
server <- function(input, output, session) {
  
  filtered_hourly_data <- reactive({
    filtered_data <- crime_data
    if (!is.null(input$year_filter) && length(input$year_filter) > 0) {
      filtered_data <- filtered_data %>%
        filter(Year %in% input$year_filter)
    }
    if (input$crime_type != "All") {
      filtered_data <- filtered_data %>%
        filter(ProcessedCrimeType == input$crime_type)
    }
    filtered_data %>%
      group_by(Hour, TimeOfDay) %>%
      summarise(CrimeCount = n(), .groups = "drop")
  })

  output$bar_chart <- renderPlotly({
  data <- filtered_hourly_data()
  
  ggplot_chart <- ggplot(data, aes(x = Hour, y = CrimeCount, fill = TimeOfDay)) +
    geom_bar(stat = "identity", color = "black") +
    scale_x_continuous(breaks = 0:23, labels = sprintf("%02d", 0:23)) +
    scale_y_continuous(labels = scales::comma) +
    scale_fill_manual(
      values = time_of_day_colors,
      breaks = c("Night", "Dawn", "Morning", "Afternoon", "Evening", "Dusk"),
      labels = c("Night", "Dawn", "Morning", "Afternoon", "Evening", "Dusk")
    ) +
    labs(
      title = paste(input$crime_type, "Crime Type"),
      x = "Hour of the Day",
      y = "Number of Incidents",
      fill = "Time of Day",
      caption = tags$a(
        href = "https://gisdata.tucsonaz.gov/datasets/982a2698677d4f6e8ef310171f7b4d9f_8/explore",
        "Source: City of Tucson"
      )
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
      axis.text.x = element_text(size = 10, angle = 0, hjust = 0.5),
      axis.text.y = element_text(size = 12),
      legend.position = "bottom",
      legend.direction = "horizontal",
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      panel.border = element_rect(fill = NA, color = "black", size = 1),
      legend.text = element_text(size = 12),
      legend.key.width = unit(1.5, "cm"),
      legend.key.height = unit(0.5, "cm"),
      legend.title = element_blank()
    )
  
  ggplotly(ggplot_chart) %>%
    layout(
      legend = list(
        orientation = "h",
        x = 0.5,
        y = -0.2,
        xanchor = "center",
        yanchor = "top",
        itemwidth = 50, 
        font = list(size = 12)
      ),
      title = list(
        text = paste(input$crime_type, "Crime Type"),
        x = 0.5
      )
    )
  })
}

shinyApp(ui = ui, server = server)
```
